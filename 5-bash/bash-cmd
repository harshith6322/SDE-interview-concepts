---Bash-cmd---

3.dir- directory

4 ls -list of files in dir has == -l = DETAIL OF THAT DIR,-R = TO LOOK INTO SUB DIR, -la = to see hidden file
6.touch index.html - make new file
7.cat - to read the ðŸ“‚ files only display thr contents =-- > to write into file's
*rm -r directory_name to remove file or folder in that directory
*rm file1 file2 file3
\*rm -rf directoryname rf= remove frocely
clr -clear text in cmd

8.vi index.html , to edit-i-insert, to save and exit- esc-btn && : && wq! - used to edit the file

9.mv :moving files,folder from one to another place - mv movingfilename newfilename/

10.cp : copy past file or folder we have use -r flag for moving folder to another folder- cp -r folder1 folder/

11: node: for writing js in cmd , node filename : for running file

The commands you've listed for Windows are also applicable in Ubuntu with the same or very similar syntax. Here's a breakdown of those commands and a few additional ones that might be useful for Ubuntu:

### Basic Commands (Same in Ubuntu)

1. **pwd** - Prints the path of the current working directory.
2. **cd** - Changes directories. `cd ..` moves one step back, and `cd ../..` moves two steps back.
3. **ls** - Lists files and directories in the current directory. Flags:
   - `-l`: Detailed list
   - `-R`: Recursive listing (shows subdirectories)
   - `-a`: Shows hidden files
   - `-la`: Combines detailed list with hidden files
4. **mkdir** - Creates a new directory.
5. **touch** - Creates a new file, e.g., `touch index.html`.
6. **cat** - Displays the contents of a file. Use `>` or `>>` to write to a file.
7. **rm** - Removes files or directories. Flags:
   - `-r`: Recursively removes directories
   - `-f`: Forces removal without confirmation
8. **vi** (or **vim** in Ubuntu) - Text editor. Use `i` to insert, `ESC` to exit insert mode, and `:wq` to save and exit.
9. **mv** - Moves or renames files or directories.
10. **cp** - Copies files or directories. Use `-r` to copy directories.

### Additional Useful Ubuntu Commands

1. **sudo** - Runs a command with superuser (root) privileges. Example: `sudo apt update`.
2. **apt-get** (or **apt**) - Package manager for Ubuntu.
   - `sudo apt-get update`: Updates package lists.
   - `sudo apt-get upgrade`: Upgrades all packages.
   - `sudo apt-get install package-name`: Installs a package.
3. **df** - Displays disk space usage. `df -h` shows it in a human-readable format.
4. **du** - Displays disk usage of files and directories. `du -sh *` shows the size of all items in the current directory.
5. **chmod** - Changes file permissions. Example: `chmod +x script.sh` makes a script executable.
6. **chown** - Changes file ownership. Example: `sudo chown user:group file`.
7. **ps** - Displays currently running processes. `ps aux` shows all processes.
8. **kill** - Terminates a process by its ID. Example: `kill 1234`.
9. **grep** - Searches text within files. Example: `grep "text" file.txt`.
10. **find** - Searches for files and directories. Example: `find / -name filename`.
11. **head** / **tail** - Displays the beginning or end of a file. Example: `head -n 10 file.txt` shows the first 10 lines.
12. **echo** - Displays a line of text or outputs it to a file. Example: `echo "Hello, World!" > hello.txt`.

These commands will help you navigate and manage files and directories in Ubuntu effectively. Most of them are directly applicable to other Linux distributions as well.
